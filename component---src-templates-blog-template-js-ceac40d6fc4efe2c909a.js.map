{"version":3,"sources":["webpack:///./src/components/blogPost.js","webpack:///./src/templates/blogTemplate.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/Title.js","webpack:///./src/components/postMeta.js"],"names":["BlogPost","styled","div","_templateObject","Template","_ref","date","markdownRemark","data","frontmatter","html","path","__date","Date","year","getFullYear","toString","month","getMonth","length","permalink","react_default","a","createElement","layout","headerImage","src","alt","style","margin","seo","title","keywords","className","blogPost","Title","to","postMeta","moment","format","dangerouslySetInnerHTML","__html","pageQuery","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","Header","siteTitle","maxWidth","padding","gatsby_browser_entry","textDecoration","Layout","children","Fragment","header","paddingTop","href","_755544856","node","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","fontWeight","fontSize","color","borderBottom","PostMeta"],"mappings":"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","file":"component---src-templates-blog-template-js-ceac40d6fc4efe2c909a.js","sourcesContent":["import styled from 'styled-components';\n\nconst BlogPost = styled.div`\nfont-size: 18px;\nline-height: 1.5em;\n`;\n\nexport default BlogPost;\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport moment from 'moment';\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Title from '../components/Title'\nimport PostMeta from '../components/postMeta'\nimport BlogPost from '../components/blogPost'\n\nfunction betterDate(date) {\n  return moment(date).format('YYYY-MM-DD');\n}\n\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  let path = frontmatter.path;\n  if (!path) {\n    const __date = new Date(frontmatter.date);\n    const year = __date.getFullYear().toString();\n    let month = (__date.getMonth() + 1).toString();\n    if (month.length < 2) {\n      month = '0' + month;\n    }\n    path = `/${year}/${month}/${frontmatter.permalink}`;\n  }\n  return (\n    <Layout\n      headerImage={\n        frontmatter.headerImage && (\n          <img\n            src={frontmatter.headerImage}\n            alt=\"\"\n            style={{\n              margin: '0px',\n            }}\n          />\n        )\n      }\n    >\n      <SEO\n        title={frontmatter.title}\n        keywords={[\n          `blog`,\n          `technology`,\n          `photography`,\n        ]}\n      />\n      <div className=\"blog-post-container\">\n        <BlogPost>\n          <Title to={path}>\n            {frontmatter.title}\n          </Title>\n          <PostMeta>\n            Posted at {betterDate(frontmatter.date)}\n          </PostMeta>\n          <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </BlogPost>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($title: String!) {\n    markdownRemark(frontmatter: { title: { eq: $title } }) {\n      html\n      frontmatter {\n        date\n        path\n        title\n        permalink\n        headerImage\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <div>\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 700,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ headerImage, children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        {headerImage}\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 700,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          {children}\n          <footer>\n            © 2018, Built with <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Title = ({ to, children }) => (\n  <Link\n    to={to}\n    style={{\n      fontWeight: '500',\n      fontSize: '24px',\n      color: '#2e405b',\n      borderBottom: 'solid #2e405b 2px',\n      textDecoration: 'none',\n    }}\n  >\n    {children}\n  </Link>\n)\n\nexport default Title\n","import styled from 'styled-components'\n\nconst PostMeta = styled.div`\nmargin: 10px 0px;\nfont-size: 16px;\ncolor: rgb(46, 64, 91);\n`\nexport default PostMeta\n"],"sourceRoot":""}