{"version":3,"sources":["webpack:///./src/components/excerpt.js","webpack:///./src/pages/index.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/Title.js","webpack:///./src/components/postMeta.js"],"names":["Excerpt","styled","p","_templateObject","IndexPage","react_default","a","createElement","gatsby_browser_entry","query","render","data","layout","seo","title","keywords","allMarkdownRemark","edges","map","_ref","node","path","frontmatter","date","Date","year","getFullYear","toString","month","getMonth","length","permalink","key","Title","to","postMeta","moment","format","betterDate","excerpt","_539435194","Header","siteTitle","style","margin","maxWidth","padding","textDecoration","propTypes","PropTypes","string","defaultProps","Layout","headerImage","children","react","header","site","siteMetadata","paddingTop","href","_755544856","isRequired","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","fontWeight","fontSize","color","borderBottom","PostMeta","div"],"mappings":"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","file":"component---src-pages-index-js-924915064f790ac6a126.js","sourcesContent":["import styled from 'styled-components';\n\nconst Excerpt = styled.p`\nfont-size: 16px;\nline-height: normal;\n`\n\nexport default Excerpt\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport moment from 'moment';\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Title from '../components/Title'\nimport PostMeta from '../components/postMeta'\nimport Excerpt from '../components/excerpt'\n\nfunction betterDate(date) {\n  return moment(date).format('YYYY-MM-DD');\n}\n\nconst IndexPage = () => (\n  <StaticQuery\n    query={graphql`\n    query {\n      allMarkdownRemark(\n        sort: { order: DESC, fields: [frontmatter___date] }\n        limit: 1000\n      ) {\n        edges {\n          node {\n            excerpt(pruneLength: 160, truncate: true)\n            frontmatter {\n              title\n              date\n              path\n              permalink\n            }\n          }\n        }\n      }\n    }\n    `}\n    render={data => (\n      <Layout>\n        <SEO\n          title=\"首页\"\n          keywords={[\n            `blog`,\n            `technology`,\n            `photography`,\n          ]}\n        />\n        {/* {JSON.stringify(data.allMarkdownRemark.edges)} */}\n        {\n          data.allMarkdownRemark.edges.map(({ node }) => {\n            let path = node.frontmatter.path;\n            if (!path) {\n              const date = new Date(node.frontmatter.date);\n              const year = date.getFullYear().toString();\n              let month = (date.getMonth() + 1).toString();\n              if (month.length < 2) {\n                month = '0' + month;\n              }\n              path = `/${year}/${month}/${node.frontmatter.permalink}`;\n            }\n            return (\n              <div key={node.frontmatter.title}>\n                <Title to={path}>\n                  {node.frontmatter.title}\n                </Title>\n                <PostMeta>\n                  Posted at {betterDate(node.frontmatter.date)}\n                </PostMeta>\n                <Excerpt>\n                  {node.excerpt}\n                </Excerpt>\n              </div>\n            )\n          })\n        }\n      </Layout>\n    )}\n  />\n)\n\nexport default IndexPage\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <div>\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 700,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ headerImage, children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Fragment>\n        {headerImage}\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 700,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          {children}\n          <footer>\n            © 2018, Built with <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </Fragment>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Title = ({ to, children }) => (\n  <Link\n    to={to}\n    style={{\n      fontWeight: '500',\n      fontSize: '24px',\n      color: '#2e405b',\n      borderBottom: 'solid #2e405b 2px',\n      textDecoration: 'none',\n    }}\n  >\n    {children}\n  </Link>\n)\n\nexport default Title\n","import styled from 'styled-components'\n\nconst PostMeta = styled.div`\nmargin: 10px 0px;\nfont-size: 16px;\ncolor: rgb(46, 64, 91);\n`\nexport default PostMeta\n"],"sourceRoot":""}