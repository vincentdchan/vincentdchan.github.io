{"version":3,"sources":["webpack:///./src/components/excerpt.js","webpack:///./src/pages/articles.js"],"names":["Excerpt","styled","p","medium","IndexPage","query","render","data","headerImage","src","placeholder","loading","alt","style","margin","title","keywords","allMarkdownRemark","edges","map","node","path","frontmatter","date","Date","year","getFullYear","toString","month","getMonth","length","permalink","key","Title","to","moment","format","betterDate","excerpt"],"mappings":"0PAUeA,EAPCC,IAAOC,EAAV,uEAAGD,CAAH,oEAIFE,K,YCyFIC,UAhFG,kBAChB,kBAAC,cAAD,CACEC,MAAK,aAoBLC,OAAQ,SAAAC,GAAI,OACV,kBAAC,IAAD,CACEC,YACE,kBAAC,IAAD,CAAkBC,IAAI,uBAAuBC,YAAY,KACtD,SAACD,EAAKE,GACL,OAAOA,EAAU,kBAAC,IAAD,MACf,yBACEF,IAAKA,EACLG,IAAI,GACJC,MAAO,CACLC,OAAQ,aAQpB,kBAAC,IAAD,CACEC,MAAM,KACNC,SAAU,CAAC,OAAD,8BAOVT,EAAKU,kBAAkBC,MAAMC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAC9BC,EAAOD,EAAKE,YAAYD,KAC5B,IAAKA,EAAM,CACT,IAAME,EAAO,IAAIC,KAAKJ,EAAKE,YAAYC,MACjCE,EAAOF,EAAKG,cAAcC,WAC5BC,GAASL,EAAKM,WAAa,GAAGF,WAC9BC,EAAME,OAAS,IACjBF,EAAQ,IAAMA,GAEhBP,EAAI,IAAOI,EAAP,IAAeG,EAAf,IAAwBR,EAAKE,YAAYS,UAE/C,OACE,yBAAKC,IAAKZ,EAAKE,YAAYP,OACzB,kBAACkB,EAAA,EAAD,CAAOC,GAAIb,GACRD,EAAKE,YAAYP,OAEpB,kBAAC,IAAD,kBArEhB,SAAoBQ,GAClB,OAAOY,IAAOZ,GAAMa,OAAO,cAqEAC,CAAWjB,EAAKE,YAAYC,OAEzC,kBAAC,EAAD,KACGH,EAAKkB","file":"component---src-pages-articles-js-c7b6a9992f6f70bf5e8c.js","sourcesContent":["import styled from 'styled-components';\nimport { medium } from './colors';\n\nconst Excerpt = styled.p`\n  font-size: 16px;\n  line-height: normal;\n  margin-bottom: 36px;\n  color: ${medium};\n`\n\nexport default Excerpt\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport moment from 'moment';\nimport ProgressiveImage from 'react-progressive-image'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Title from '../components/Title'\nimport PostMeta from '../components/postMeta'\nimport Excerpt from '../components/excerpt'\nimport HeaderImagePlaceFolder from '../components/headerImagePlaceHolder'\n\nfunction betterDate(date) {\n  return moment(date).format('YYYY-MM-DD');\n}\n\nconst IndexPage = () => (\n  <StaticQuery\n    query={graphql`\n    query {\n      allMarkdownRemark(\n        sort: { order: DESC, fields: [frontmatter___date] }\n        limit: 1000\n      ) {\n        edges {\n          node {\n            excerpt(pruneLength: 160, truncate: true)\n            frontmatter {\n              title\n              date\n              path\n              permalink\n            }\n          }\n        }\n      }\n    }\n    `}\n    render={data => (\n      <Layout\n        headerImage={\n          <ProgressiveImage src=\"/images/homepage.jpg\" placeholder=\"\">\n            {(src, loading) => {\n              return loading ? <HeaderImagePlaceFolder /> : (\n                <img\n                  src={src}\n                  alt=\"\"\n                  style={{\n                    margin: '0px',\n                  }}\n                />\n              );\n            }}\n          </ProgressiveImage>\n        }\n      >\n        <SEO\n          title=\"文章\"\n          keywords={[\n            `blog`,\n            `technology`,\n            `photography`,\n          ]}\n        />\n        {\n          data.allMarkdownRemark.edges.map(({ node }) => {\n            let path = node.frontmatter.path;\n            if (!path) {\n              const date = new Date(node.frontmatter.date);\n              const year = date.getFullYear().toString();\n              let month = (date.getMonth() + 1).toString();\n              if (month.length < 2) {\n                month = '0' + month;\n              }\n              path = `/${year}/${month}/${node.frontmatter.permalink}`;\n            }\n            return (\n              <div key={node.frontmatter.title}>\n                <Title to={path}>\n                  {node.frontmatter.title}\n                </Title>\n                <PostMeta>\n                  Posted at {betterDate(node.frontmatter.date)}\n                </PostMeta>\n                <Excerpt>\n                  {node.excerpt}\n                </Excerpt>\n              </div>\n            )\n          })\n        }\n      </Layout>\n    )}\n  />\n)\n\nexport default IndexPage\n"],"sourceRoot":""}