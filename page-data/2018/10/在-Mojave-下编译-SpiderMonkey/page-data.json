{"componentChunkName":"component---src-templates-blog-template-js","path":"/2018/10/在-Mojave-下编译-SpiderMonkey","webpackCompilationHash":"b330f72afa81144bb29e","result":{"data":{"markdownRemark":{"html":"<p>自从 macOS 升级到 Mojave(10.14) 之后，编译 SpiderMonkey 变得有点不同。</p>\n<p>有一点比较重要的变化是 libstdc++ 被替换成 libc++，这个修改是从 OS X 10.9 就开始有的修改，所以直接调用 ./configure 有这样的 warning 和报错：</p>\n<pre><code class=\"language-shell\">checking whether the C++ compiler (/usr/bin/clang++  -fno-common -fno-rtti  -lobjc) actually is a C++ compiler... no\nconfigure: error: /usr/bin/clang++  -fno-common -fno-rtti  -lobjc failed to compile and link a simple C++ source.\n------ config.log ------\n; return 0; }\nconfigure:7837: checking for 64-bit OS\nconfigure:7846: /usr/bin/clang -c  -std=gnu99 -Qunused-arguments  conftest.c 1>&#x26;5\nconfigure:8119: checking for -framework ExceptionHandling\nconfigure:8129: /usr/bin/clang -o conftest  -std=gnu99 -fno-common -Qunused-arguments   -lobjc -framework ExceptionHandling conftest.c  1>&#x26;5\nconfigure:8151: checking for -dead_strip option to ld\nconfigure:8162: /usr/bin/clang -o conftest  -std=gnu99 -fno-common -Qunused-arguments   -lobjc -Wl,-dead_strip conftest.c  1>&#x26;5\nconfigure:9034: checking for valid debug flags\nconfigure:9045: /usr/bin/clang -c  -std=gnu99 -fno-common -g -Qunused-arguments  conftest.c 1>&#x26;5\nconfigure:9134: checking whether the C++ compiler (/usr/bin/clang++  -fno-common -fno-rtti  -lobjc) actually is a C++ compiler\nconfigure:9153: /usr/bin/clang++ -o conftest  -fno-common -fno-rtti -Qunused-arguments   -lobjc conftest.C  1>&#x26;5\nclang: warning: libstdc++ is deprecated; move to libc++ with a minimum deployment target of OS X 10.9 [-Wdeprecated]\nwarning: include path for stdlibc++ headers not found; pass '-std=libc++' on the command line to use the libc++ standard library instead [-Wstdlibcxx-not-found]\nconfigure:9147:10: fatal error: 'new' file not found\n#include &#x3C;new>\n         ^~~~~\n1 warning and 1 error generated.\nconfigure: failed program was:\n#line 9146 \"configure\"\n#include \"confdefs.h\"\n#include &#x3C;new>\nint main() {\nint *foo = new int;\n; return 0; }\nconfigure: error: /usr/bin/clang++  -fno-common -fno-rtti  -lobjc failed to compile and link a simple C++ source.\n</code></pre>\n<p>很明显，报错原因是因为标准库 new 找不到，原因也在于 libstdc++ 被替换了，但是天杀的报错信息写错了。应该加入的 flag 是 <code>-stdlib=libc++</code> 而不是 <code>-std=libc++</code>，这一点很坑爹。</p>\n<p>但是加上了这个 flag 仍然不能编译，因为又有报错：</p>\n<pre><code class=\"language-shell\">clang: error: invalid deployment target for -stdlib=libc++ (requires OS X 10.7 or later)\n</code></pre>\n<p>想了半天，我的系统不是 10.14 吗，后来才知道是因为要设置 deployment target，很坑爹，所以最后让我编译成功的命令是：</p>\n<pre><code class=\"language-shell\">$ CXXFLAGS=\"-stdlib=libc++ -mmacosx-version-min=10.7\"\n</code></pre>\n<p>写篇 blog 庆祝一下。</p>","frontmatter":{"date":"2018-10-29T00:16:14.000Z","path":"/2018/10/在-Mojave-下编译-SpiderMonkey","title":"在 Mojave 下编译 SpiderMonkey","permalink":null,"headerImage":null,"tags":["macOS","mojave","javescript","spidermonkey","mozilla"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"title":"在 Mojave 下编译 SpiderMonkey"}}}