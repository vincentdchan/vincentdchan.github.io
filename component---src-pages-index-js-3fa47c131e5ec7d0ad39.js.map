{"version":3,"sources":["webpack:///./src/components/excerpt.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/Title.js","webpack:///./src/components/postMeta.js"],"names":["Excerpt","styled","p","_templateObject","IndexPage","react_default","a","createElement","gatsby_browser_entry","query","render","data","layout","seo","title","keywords","allMarkdownRemark","edges","map","_ref","node","path","frontmatter","date","Date","year","getFullYear","toString","month","getMonth","length","permalink","key","Title","to","postMeta","moment","format","betterDate","excerpt","_539435194","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","style","margin","maxWidth","padding","textDecoration","defaultProps","Layout","headerImage","react","header","site","siteMetadata","paddingTop","href","_755544856","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf","gatsby__WEBPACK_IMPORTED_MODULE_1__","fontWeight","fontSize","color","borderBottom","PostMeta","div"],"mappings":"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","file":"component---src-pages-index-js-3fa47c131e5ec7d0ad39.js","sourcesContent":["import styled from 'styled-components';\n\nconst Excerpt = styled.p`\nfont-size: 16px;\nline-height: normal;\n`\n\nexport default Excerpt\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport moment from 'moment';\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Title from '../components/Title'\nimport PostMeta from '../components/postMeta'\nimport Excerpt from '../components/excerpt'\n\nfunction betterDate(date) {\n  return moment(date).format('YYYY-MM-DD');\n}\n\nconst IndexPage = () => (\n  <StaticQuery\n    query={graphql`\n    query {\n      allMarkdownRemark(\n        sort: { order: DESC, fields: [frontmatter___date] }\n        limit: 1000\n      ) {\n        edges {\n          node {\n            excerpt(pruneLength: 160, truncate: true)\n            frontmatter {\n              title\n              date\n              path\n              permalink\n            }\n          }\n        }\n      }\n    }\n    `}\n    render={data => (\n      <Layout>\n        <SEO\n          title=\"首页\"\n          keywords={[\n            `blog`,\n            `technology`,\n            `photography`,\n          ]}\n        />\n        {/* {JSON.stringify(data.allMarkdownRemark.edges)} */}\n        {\n          data.allMarkdownRemark.edges.map(({ node }) => {\n            let path = node.frontmatter.path;\n            if (!path) {\n              const date = new Date(node.frontmatter.date);\n              const year = date.getFullYear().toString();\n              let month = (date.getMonth() + 1).toString();\n              if (month.length < 2) {\n                month = '0' + month;\n              }\n              path = `/${year}/${month}/${node.frontmatter.permalink}`;\n            }\n            return (\n              <div key={node.frontmatter.title}>\n                <Title to={path}>\n                  {node.frontmatter.title}\n                </Title>\n                <PostMeta>\n                  Posted at {betterDate(node.frontmatter.date)}\n                </PostMeta>\n                <Excerpt>\n                  {node.excerpt}\n                </Excerpt>\n              </div>\n            )\n          })\n        }\n      </Layout>\n    )}\n  />\n)\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst Header = ({ siteTitle }) => (\n  <div>\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 700,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ headerImage, children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Fragment>\n        {headerImage}\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 700,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          {children}\n          <footer>\n            © 2018, Built with <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </Fragment>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Title = ({ to, children }) => (\n  <Link\n    to={to}\n    style={{\n      fontWeight: '500',\n      fontSize: '24px',\n      color: '#2e405b',\n      borderBottom: 'solid #2e405b 2px',\n      textDecoration: 'none',\n    }}\n  >\n    {children}\n  </Link>\n)\n\nexport default Title\n","import styled from 'styled-components'\n\nconst PostMeta = styled.div`\nmargin: 10px 0px;\nfont-size: 16px;\ncolor: rgb(46, 64, 91);\n`\nexport default PostMeta\n"],"sourceRoot":""}