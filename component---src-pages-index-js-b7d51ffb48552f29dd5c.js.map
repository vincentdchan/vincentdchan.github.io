{"version":3,"sources":["webpack:///./src/components/excerpt.js","webpack:///./src/pages/index.js","webpack:///./src/components/colors.js","webpack:///./src/components/navigation.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/Title.js","webpack:///./src/components/postMeta.js","webpack:///./src/components/headerImagePlaceHolder.js"],"names":["Excerpt","styled","p","withConfig","displayName","componentId","medium","IndexPage","react_default","a","createElement","gatsby_browser_entry","query","render","data","layout","headerImage","dist_default","src","placeholder","loading","headerImagePlaceHolder","alt","style","margin","seo","title","keywords","allMarkdownRemark","edges","map","_ref","node","path","frontmatter","date","Date","year","getFullYear","toString","month","getMonth","length","permalink","key","Title","to","postMeta","moment","format","betterDate","excerpt","_539435194","__webpack_require__","d","__webpack_exports__","heavy","Navigation","div","SubTitle","span","BigTitle","h1","Header","siteTitle","maxWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","navigation","textDecoration","propTypes","PropTypes","string","defaultProps","Footer","footer","Layout","children","react","header","site","siteMetadata","padding","href","_755544856","isRequired","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","styled_components__WEBPACK_IMPORTED_MODULE_2__","_components_colors__WEBPACK_IMPORTED_MODULE_3__","TitleContainer","styled_components__WEBPACK_IMPORTED_MODULE_0__","_components_colors__WEBPACK_IMPORTED_MODULE_1__","PostMeta","HeaderImagePlaceHolder"],"mappings":"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","file":"component---src-pages-index-js-b7d51ffb48552f29dd5c.js","sourcesContent":["import styled from 'styled-components';\nimport { medium } from './colors';\n\nconst Excerpt = styled.p`\n  font-size: 16px;\n  line-height: normal;\n  margin-bottom: 36px;\n  color: ${medium};\n`\n\nexport default Excerpt\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport moment from 'moment';\nimport ProgressiveImage from 'react-progressive-image'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Title from '../components/Title'\nimport PostMeta from '../components/postMeta'\nimport Excerpt from '../components/excerpt'\nimport HeaderImagePlaceFolder from '../components/headerImagePlaceHolder'\n\nfunction betterDate(date) {\n  return moment(date).format('YYYY-MM-DD');\n}\n\nconst IndexPage = () => (\n  <StaticQuery\n    query={graphql`\n    query {\n      allMarkdownRemark(\n        sort: { order: DESC, fields: [frontmatter___date] }\n        limit: 1000\n      ) {\n        edges {\n          node {\n            excerpt(pruneLength: 160, truncate: true)\n            frontmatter {\n              title\n              date\n              path\n              permalink\n            }\n          }\n        }\n      }\n    }\n    `}\n    render={data => (\n      <Layout\n        headerImage={\n          <ProgressiveImage src=\"/images/homepage.jpg\" placeholder=\"\">\n            {(src, loading) => {\n              return loading ? <HeaderImagePlaceFolder /> : (\n                <img\n                  src={src}\n                  alt=\"\"\n                  style={{\n                    margin: '0px',\n                  }}\n                />\n              );\n            }}\n          </ProgressiveImage>\n        }\n      >\n        <SEO\n          title=\"首页\"\n          keywords={[\n            `blog`,\n            `technology`,\n            `photography`,\n          ]}\n        />\n        {\n          data.allMarkdownRemark.edges.map(({ node }) => {\n            let path = node.frontmatter.path;\n            if (!path) {\n              const date = new Date(node.frontmatter.date);\n              const year = date.getFullYear().toString();\n              let month = (date.getMonth() + 1).toString();\n              if (month.length < 2) {\n                month = '0' + month;\n              }\n              path = `/${year}/${month}/${node.frontmatter.permalink}`;\n            }\n            return (\n              <div key={node.frontmatter.title}>\n                <Title to={path}>\n                  {node.frontmatter.title}\n                </Title>\n                <PostMeta>\n                  Posted at {betterDate(node.frontmatter.date)}\n                </PostMeta>\n                <Excerpt>\n                  {node.excerpt}\n                </Excerpt>\n              </div>\n            )\n          })\n        }\n      </Layout>\n    )}\n  />\n)\n\nexport default IndexPage\n","export const veryHeavy = `#0C1D49`;\nexport const heavy = `#1A2D5A`;\nexport const medium = `#2E406E`;\nexport const light = `#42537E`;\nexport const veryLight = `5D6B90`;","import styled from 'styled-components'\n\nconst Navigation = styled.div`\n  padding-left: 0px;\n  padding-right: 0px;\n  padding-top: 4px;\n  padding-bottom: 36px;\n`\n\nexport default Navigation\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { medium, heavy } from './colors';\n\nimport Navigation from '../components/navigation'\n\nconst SubTitle = styled.span`\n  margin-right: 12px;\n  font-weight: 500;\n  color: ${medium};\n\n  &:hover {\n    border-bottom: 2px solid ${medium};\n  }\n`;\n\nconst BigTitle = styled.h1`\n  color: ${heavy};\n  margin: 0;\n`\n\nconst Header = ({ siteTitle }) => (\n  <div>\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 700,\n        paddingTop: '1.45rem',\n        paddingBottom: '0rem',\n        paddingLeft: '1rem',\n        paddingRight: '1rem',\n      }}\n    >\n      <BigTitle>\n        {siteTitle}\n      </BigTitle>\n      <Navigation>\n        <Link\n          to=\"/\"\n          style={{\n            textDecoration: 'none',\n          }}\n        >\n          <SubTitle>首页</SubTitle>\n        </Link>\n        <Link\n          to=\"/aboutme\"\n          style={{\n            textDecoration: 'none',\n          }}\n        >\n          <SubTitle>关于我</SubTitle>\n        </Link>\n      </Navigation>\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\nimport styled from 'styled-components'\nimport { medium } from '../components/colors'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Footer = styled.footer`\n  color: ${medium};\n`;\n\nconst Layout = ({ headerImage, children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Fragment>\n        {headerImage}\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 700,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          {children}\n          <Footer>\n            © 2019, Built with <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </Footer>\n        </div>\n      </Fragment>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport { heavy } from '../components/colors'\n\nconst TitleContainer = styled.span`\n  font-weight: 500;\n  font-size: 24px;\n  color: ${heavy};\n\n  &:hover {\n    border-bottom: solid ${heavy} 2px;\n  }\n`\n\nconst Title = ({ to, children }) => (\n  <Link\n    to={to}\n    style={{\n      textDecoration: 'none',\n    }}\n  >\n    <TitleContainer>\n      {children}\n    </TitleContainer>\n  </Link>\n)\n\nexport default Title\n","import styled from 'styled-components'\nimport { medium } from '../components/colors'\n\nconst PostMeta = styled.div`\n  margin: 8px 0px;\n  font-size: 16px;\n  color: ${medium};\n`\nexport default PostMeta\n","import styled from 'styled-components'\n\nconst HeaderImagePlaceHolder = styled.div`\nbackground-color: rgb(245, 247, 249);\nheight: 280px;\n`;\n\nexport default HeaderImagePlaceHolder\n"],"sourceRoot":""}