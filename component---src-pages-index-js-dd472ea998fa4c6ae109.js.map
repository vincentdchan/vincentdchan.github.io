{"version":3,"sources":["webpack:///./src/components/excerpt.js","webpack:///./src/pages/index.js","webpack:///./src/components/colors.js","webpack:///./src/components/navigation.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/Title.js","webpack:///./src/components/postMeta.js","webpack:///./src/components/headerImagePlaceHolder.js"],"names":["Excerpt","styled","p","withConfig","displayName","componentId","medium","IndexPage","react_default","a","createElement","gatsby_browser_entry","query","render","data","layout","headerImage","dist_default","src","placeholder","loading","headerImagePlaceHolder","alt","style","margin","seo","title","keywords","allMarkdownRemark","edges","map","_ref","node","path","frontmatter","date","Date","year","getFullYear","toString","month","getMonth","length","permalink","key","Title","to","postMeta","moment","format","betterDate","excerpt","_539435194","__webpack_require__","d","__webpack_exports__","heavy","Navigation","div","span","BigTitle","h1","Header","siteTitle","maxWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","navigation","textDecoration","propTypes","PropTypes","string","defaultProps","Layout","children","react","header","site","siteMetadata","padding","href","_755544856","isRequired","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","styled_components__WEBPACK_IMPORTED_MODULE_2__","_components_colors__WEBPACK_IMPORTED_MODULE_3__","TitleContainer","styled_components__WEBPACK_IMPORTED_MODULE_0__","_components_colors__WEBPACK_IMPORTED_MODULE_1__","PostMeta","HeaderImagePlaceHolder"],"mappings":"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","file":"component---src-pages-index-js-dd472ea998fa4c6ae109.js","sourcesContent":["import styled from 'styled-components';\nimport { medium } from './colors';\n\nconst Excerpt = styled.p`\n  font-size: 16px;\n  line-height: normal;\n  margin-bottom: 36px;\n  color: ${medium};\n`\n\nexport default Excerpt\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport moment from 'moment';\nimport ProgressiveImage from 'react-progressive-image'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Title from '../components/Title'\nimport PostMeta from '../components/postMeta'\nimport Excerpt from '../components/excerpt'\nimport HeaderImagePlaceFolder from '../components/headerImagePlaceHolder'\n\nfunction betterDate(date) {\n  return moment(date).format('YYYY-MM-DD');\n}\n\nconst IndexPage = () => (\n  <StaticQuery\n    query={graphql`\n    query {\n      allMarkdownRemark(\n        sort: { order: DESC, fields: [frontmatter___date] }\n        limit: 1000\n      ) {\n        edges {\n          node {\n            excerpt(pruneLength: 160, truncate: true)\n            frontmatter {\n              title\n              date\n              path\n              permalink\n            }\n          }\n        }\n      }\n    }\n    `}\n    render={data => (\n      <Layout\n        headerImage={\n          <ProgressiveImage src=\"/images/homepage.jpg\" placeholder=\"\">\n            {(src, loading) => {\n              return loading ? <HeaderImagePlaceFolder /> : (\n                <img\n                  src={src}\n                  alt=\"\"\n                  style={{\n                    margin: '0px',\n                  }}\n                />\n              );\n            }}\n          </ProgressiveImage>\n        }\n      >\n        <SEO\n          title=\"首页\"\n          keywords={[\n            `blog`,\n            `technology`,\n            `photography`,\n          ]}\n        />\n        {\n          data.allMarkdownRemark.edges.map(({ node }) => {\n            let path = node.frontmatter.path;\n            if (!path) {\n              const date = new Date(node.frontmatter.date);\n              const year = date.getFullYear().toString();\n              let month = (date.getMonth() + 1).toString();\n              if (month.length < 2) {\n                month = '0' + month;\n              }\n              path = `/${year}/${month}/${node.frontmatter.permalink}`;\n            }\n            return (\n              <div key={node.frontmatter.title}>\n                <Title to={path}>\n                  {node.frontmatter.title}\n                </Title>\n                <PostMeta>\n                  Posted at {betterDate(node.frontmatter.date)}\n                </PostMeta>\n                <Excerpt>\n                  {node.excerpt}\n                </Excerpt>\n              </div>\n            )\n          })\n        }\n      </Layout>\n    )}\n  />\n)\n\nexport default IndexPage\n","export const veryHeavy = `#0C1D49`;\nexport const heavy = `#1A2D5A`;\nexport const medium = `#2E406E`;\nexport const light = `#42537E`;\nexport const veryLight = `5D6B90`;","import styled from 'styled-components'\n\nconst Navigation = styled.div`\n  padding-left: 0px;\n  padding-right: 0px;\n  padding-top: 4px;\n  padding-bottom: 36px;\n`\n\nexport default Navigation\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { heavy } from './colors';\n\nimport Navigation from '../components/navigation'\n\nconst Title = styled.span`\n  margin-right: 12px;\n  font-weight: 500;\n\n  &:hover {\n    border-bottom: 2px solid rgb(46, 64, 91);\n  }\n`;\n\nconst BigTitle = styled.h1`\n  color: ${heavy};\n  margin: 0;\n`\n\nconst Header = ({ siteTitle }) => (\n  <div>\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 700,\n        paddingTop: '1.45rem',\n        paddingBottom: '0rem',\n        paddingLeft: '1rem',\n        paddingRight: '1rem',\n      }}\n    >\n      <BigTitle>\n        {siteTitle}\n      </BigTitle>\n      <Navigation>\n        <Link\n          to=\"/\"\n          style={{\n            textDecoration: 'none',\n          }}\n        >\n          <Title>首页</Title>\n        </Link>\n        <Link\n          to=\"/aboutme\"\n          style={{\n            textDecoration: 'none',\n          }}\n        >\n          <Title>关于我</Title>\n        </Link>\n      </Navigation>\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ headerImage, children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Fragment>\n        {headerImage}\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 700,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          {children}\n          <footer>\n            © 2018, Built with <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </Fragment>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\nimport { heavy } from '../components/colors'\n\nconst TitleContainer = styled.span`\n  font-weight: 500;\n  font-size: 24px;\n  color: ${heavy};\n\n  &:hover {\n    border-bottom: solid #2e405b 2px;\n  }\n`\n\nconst Title = ({ to, children }) => (\n  <Link\n    to={to}\n    style={{\n      textDecoration: 'none',\n    }}\n  >\n    <TitleContainer>\n      {children}\n    </TitleContainer>\n  </Link>\n)\n\nexport default Title\n","import styled from 'styled-components'\nimport { medium } from '../components/colors'\n\nconst PostMeta = styled.div`\n  margin: 8px 0px;\n  font-size: 16px;\n  color: ${medium};\n`\nexport default PostMeta\n","import styled from 'styled-components'\n\nconst HeaderImagePlaceHolder = styled.div`\nbackground-color: rgb(245, 247, 249);\nheight: 280px;\n`;\n\nexport default HeaderImagePlaceHolder\n"],"sourceRoot":""}