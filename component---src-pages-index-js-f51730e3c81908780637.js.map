{"version":3,"sources":["webpack:///./src/components/excerpt.js","webpack:///./src/pages/index.js","webpack:///./src/components/navigation.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/Title.js","webpack:///./src/components/postMeta.js","webpack:///./src/components/headerImagePlaceHolder.js"],"names":["Excerpt","styled","p","withConfig","displayName","componentId","IndexPage","react_default","a","createElement","gatsby_browser_entry","query","render","data","layout","headerImage","dist_default","src","placeholder","loading","headerImagePlaceHolder","alt","style","margin","seo","title","keywords","allMarkdownRemark","edges","map","_ref","node","path","frontmatter","date","Date","year","getFullYear","toString","month","getMonth","length","permalink","key","Title","to","postMeta","moment","format","betterDate","excerpt","_539435194","Navigation","div","span","Header","siteTitle","maxWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","textDecoration","navigation","propTypes","PropTypes","string","defaultProps","Layout","children","react","header","site","siteMetadata","padding","href","_755544856","isRequired","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","TitleContainer","PostMeta","HeaderImagePlaceHolder"],"mappings":"qNAQeA,SANCC,EAAOC,EAAVC,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAGJ,CAAH,oEC8FEK,UAhFG,kBAChBC,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEC,MAAK,YAoBLC,OAAQ,SAAAC,GAAI,OACVN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEC,YACER,EAAAC,EAAAC,cAACO,EAAAR,EAAD,CAAkBS,IAAI,uBAAuBC,YAAY,IACtD,SAACD,EAAKE,GACL,OAAOA,EAAUZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,MACfb,EAAAC,EAAAC,cAAA,OACEQ,IAAKA,EACLI,IAAI,GACJC,MAAO,CACLC,OAAQ,YAQpBhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACEC,MAAM,KACNC,SAAU,sCAOVb,EAAKc,kBAAkBC,MAAMC,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAC9BC,EAAOD,EAAKE,YAAYD,KAC5B,IAAKA,EAAM,CACT,IAAME,EAAO,IAAIC,KAAKJ,EAAKE,YAAYC,MACjCE,EAAOF,EAAKG,cAAcC,WAC5BC,GAASL,EAAKM,WAAa,GAAGF,WAC9BC,EAAME,OAAS,IACjBF,EAAQ,IAAMA,GAEhBP,EAAI,IAAOI,EAAP,IAAeG,EAAf,IAAwBR,EAAKE,YAAYS,UAE/C,OACEnC,EAAAC,EAAAC,cAAA,OAAKkC,IAAKZ,EAAKE,YAAYR,OACzBlB,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAOC,GAAIb,GACRD,EAAKE,YAAYR,OAEpBlB,EAAAC,EAAAC,cAACqC,EAAA,EAAD,kBArEhB,SAAoBZ,GAClB,OAAOa,IAAOb,GAAMc,OAAO,cAqEAC,CAAWlB,EAAKE,YAAYC,OAEzC3B,EAAAC,EAAAC,cAACyC,EAAD,KACGnB,EAAKmB,cApEtBrC,KAAAsC,kNCRaC,EAPInD,IAAOoD,IAAVlD,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAGJ,CAAH,6ECKV2C,EAAQ3C,IAAOqD,KAAVnD,WAAA,CAAAC,YAAA,gBAAAC,YAAA,eAAGJ,CAAH,uFASLsD,EAAS,SAAAzB,GAAA,IAAG0B,EAAH1B,EAAG0B,UAAH,OACbjD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACEa,MAAO,CACLC,OAAM,SACNkC,SAAU,IACVC,WAAY,UACZC,cAAe,OACfC,YAAa,OACbC,aAAc,SAGhBtD,EAAAC,EAAAC,cAAA,MAAIa,MAAO,CAAEC,OAAQ,IACnBhB,EAAAC,EAAAC,cAACC,EAAA,KAAD,CACEmC,GAAG,IACHvB,MAAO,CACLwC,eAAc,SAGfN,IAGLjD,EAAAC,EAAAC,cAACsD,EAAD,KACExD,EAAAC,EAAAC,cAACC,EAAA,KAAD,CACEmC,GAAG,IACHvB,MAAO,CACLwC,eAAgB,SAGlBvD,EAAAC,EAAAC,cAACmC,EAAD,YAEFrC,EAAAC,EAAAC,cAACC,EAAA,KAAD,CACEmC,GAAG,WACHvB,MAAO,CACLwC,eAAgB,SAGlBvD,EAAAC,EAAAC,cAACmC,EAAD,iBAOVW,EAAOS,UAAY,CACjBR,UAAWS,IAAUC,QAGvBX,EAAOY,aAAe,CACpBX,UAAS,IAGID,QC7DTa,UAAS,SAAAtC,GAAA,IAAGf,EAAHe,EAAGf,YAAasD,EAAhBvC,EAAgBuC,SAAhB,OACb9D,EAAAC,EAAAC,cAACC,EAAA,YAAD,CACEC,MAAK,YASLC,OAAQ,SAAAC,GAAI,OACVN,EAAAC,EAAAC,cAAC6D,EAAA,SAAD,KACGvD,EACDR,EAAAC,EAAAC,cAAC8D,EAAD,CAAQf,UAAW3C,EAAK2D,KAAKC,aAAahD,QAC1ClB,EAAAC,EAAAC,cAAA,OACEa,MAAO,CACLC,OAAM,SACNkC,SAAU,IACViB,QAAO,wBACPhB,WAAY,IAGbW,EACD9D,EAAAC,EAAAC,cAAA,oCACqBF,EAAAC,EAAAC,cAAA,KAAGkE,KAAK,4BAAR,cAxB7B9D,KAAA+D,MAgCFR,EAAOJ,UAAY,CACjBK,SAAUJ,IAAUlC,KAAK8C,YAGZT,+GCvCf,SAASU,EAAThD,GAA2D,IAA5CiD,EAA4CjD,EAA5CiD,YAAaC,EAA+BlD,EAA/BkD,KAAMC,EAAyBnD,EAAzBmD,KAAMvD,EAAmBI,EAAnBJ,SAAUD,EAASK,EAATL,MAChD,OACEyD,EAAA1E,EAAAC,cAAC0E,EAAA,YAAD,CACExE,MAAOyE,EACPxE,OAAQ,SAAAC,GACN,IAAMwE,EACJN,GAAelE,EAAK2D,KAAKC,aAAaM,YACxC,OACEG,EAAA1E,EAAAC,cAAC6E,EAAA9E,EAAD,CACE+E,eAAgB,CACdP,QAEFvD,MAAOA,EACP+D,cAAa,QAAU3E,EAAK2D,KAAKC,aAAahD,MAC9CwD,KAAM,CACJ,CACEQ,KAAI,cACJC,QAASL,GAEX,CACEM,SAAQ,WACRD,QAASjE,GAEX,CACEkE,SAAQ,iBACRD,QAASL,GAEX,CACEM,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAS7E,EAAK2D,KAAKC,aAAamB,QAElC,CACEH,KAAI,gBACJC,QAASjE,GAEX,CACEgE,KAAI,sBACJC,QAASL,IAGVQ,OACCnE,EAASe,OAAS,EACd,CACEgD,KAAI,WACJC,QAAShE,EAASoE,KAAT,OAEX,IAELD,OAAOZ,MAtDlBpE,KAAAkF,IA8DJjB,EAAIX,aAAe,CACjBa,KAAI,KACJC,KAAM,GACNvD,SAAU,IAGZoD,EAAId,UAAY,CACde,YAAad,IAAUC,OACvBc,KAAMf,IAAUC,OAChBe,KAAMhB,IAAU+B,MAChBtE,SAAUuC,IAAUgC,QAAQhC,IAAUC,QACtCzC,MAAOwC,IAAUC,OAAOW,YAGXC,MAEf,IAAMM,EAAY,oMCrFlB,IAAAc,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,IAIMI,EAJNJ,EAAA,KAIuBlG,EAAOqD,KAAVnD,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAGJ,CAAH,4FAuBL2C,IAbD,SAAAd,GAAA,IAAGe,EAAHf,EAAGe,GAAIwB,EAAPvC,EAAOuC,SAAP,OACZ+B,EAAA5F,EAAAC,cAAC6F,EAAA,KAAD,CACEzD,GAAIA,EACJvB,MAAO,CACLwC,eAAgB,SAGlBsC,EAAA5F,EAAAC,cAAC8F,EAAD,KACGlC,uCCtBP,IAEMmC,EAFNL,EAAA,KAEiBlG,EAAOoD,IAAVlD,WAAA,CAAAC,YAAA,qBAAAC,YAAA,eAAGJ,CAAH,wDAKCuG,wCCPf,IAEMC,EAFNN,EAAA,KAE+BlG,EAAOoD,IAAVlD,WAAA,CAAAC,YAAA,iDAAAC,YAAA,gBAAGJ,CAAH,qDAKbwG","file":"component---src-pages-index-js-f51730e3c81908780637.js","sourcesContent":["import styled from 'styled-components';\n\nconst Excerpt = styled.p`\n  font-size: 16px;\n  line-height: normal;\n  margin-bottom: 36px;\n`\n\nexport default Excerpt\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport moment from 'moment';\nimport ProgressiveImage from 'react-progressive-image'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Title from '../components/Title'\nimport PostMeta from '../components/postMeta'\nimport Excerpt from '../components/excerpt'\nimport HeaderImagePlaceFolder from '../components/headerImagePlaceHolder'\n\nfunction betterDate(date) {\n  return moment(date).format('YYYY-MM-DD');\n}\n\nconst IndexPage = () => (\n  <StaticQuery\n    query={graphql`\n    query {\n      allMarkdownRemark(\n        sort: { order: DESC, fields: [frontmatter___date] }\n        limit: 1000\n      ) {\n        edges {\n          node {\n            excerpt(pruneLength: 160, truncate: true)\n            frontmatter {\n              title\n              date\n              path\n              permalink\n            }\n          }\n        }\n      }\n    }\n    `}\n    render={data => (\n      <Layout\n        headerImage={\n          <ProgressiveImage src=\"/images/homepage.jpg\" placeholder=\"\">\n            {(src, loading) => {\n              return loading ? <HeaderImagePlaceFolder /> : (\n                <img\n                  src={src}\n                  alt=\"\"\n                  style={{\n                    margin: '0px',\n                  }}\n                />\n              );\n            }}\n          </ProgressiveImage>\n        }\n      >\n        <SEO\n          title=\"首页\"\n          keywords={[\n            `blog`,\n            `technology`,\n            `photography`,\n          ]}\n        />\n        {\n          data.allMarkdownRemark.edges.map(({ node }) => {\n            let path = node.frontmatter.path;\n            if (!path) {\n              const date = new Date(node.frontmatter.date);\n              const year = date.getFullYear().toString();\n              let month = (date.getMonth() + 1).toString();\n              if (month.length < 2) {\n                month = '0' + month;\n              }\n              path = `/${year}/${month}/${node.frontmatter.permalink}`;\n            }\n            return (\n              <div key={node.frontmatter.title}>\n                <Title to={path}>\n                  {node.frontmatter.title}\n                </Title>\n                <PostMeta>\n                  Posted at {betterDate(node.frontmatter.date)}\n                </PostMeta>\n                <Excerpt>\n                  {node.excerpt}\n                </Excerpt>\n              </div>\n            )\n          })\n        }\n      </Layout>\n    )}\n  />\n)\n\nexport default IndexPage\n","import styled from 'styled-components'\n\nconst Navigation = styled.div`\n  padding-left: 0px;\n  padding-right: 0px;\n  padding-top: 4px;\n  padding-bottom: 36px;\n`\n\nexport default Navigation\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport Navigation from '../components/navigation'\n\nconst Title = styled.span`\n  margin-right: 12px;\n  font-weight: 500;\n\n  &:hover {\n    border-bottom: 2px solid rgb(46, 64, 91);\n  }\n`;\n\nconst Header = ({ siteTitle }) => (\n  <div>\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 700,\n        paddingTop: '1.45rem',\n        paddingBottom: '0rem',\n        paddingLeft: '1rem',\n        paddingRight: '1rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n      <Navigation>\n        <Link\n          to=\"/\"\n          style={{\n            textDecoration: 'none',\n          }}\n        >\n          <Title>首页</Title>\n        </Link>\n        <Link\n          to=\"/aboutme\"\n          style={{\n            textDecoration: 'none',\n          }}\n        >\n          <Title>关于我</Title>\n        </Link>\n      </Navigation>\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ headerImage, children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Fragment>\n        {headerImage}\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 700,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          {children}\n          <footer>\n            © 2018, Built with <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </Fragment>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst TitleContainer = styled.span`\n  font-weight: 500;\n  font-size: 24px;\n  color: #2e405b;\n\n  &:hover {\n    border-bottom: solid #2e405b 2px;\n  }\n`\n\nconst Title = ({ to, children }) => (\n  <Link\n    to={to}\n    style={{\n      textDecoration: 'none',\n    }}\n  >\n    <TitleContainer>\n      {children}\n    </TitleContainer>\n  </Link>\n)\n\nexport default Title\n","import styled from 'styled-components'\n\nconst PostMeta = styled.div`\n  margin: 8px 0px;\n  font-size: 16px;\n  color: rgb(46, 64, 91);\n`\nexport default PostMeta\n","import styled from 'styled-components'\n\nconst HeaderImagePlaceHolder = styled.div`\nbackground-color: rgb(245, 247, 249);\nheight: 280px;\n`;\n\nexport default HeaderImagePlaceHolder\n"],"sourceRoot":""}