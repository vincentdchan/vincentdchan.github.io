{"data":{"markdownRemark":{"html":"<h1>起因</h1>\n<p>最近在写一个关于 JavaScript 的静态分析器，作为我的毕业设计。我写静态分析主要是为了 js 做更好的 tree shaking，做更多关于 ES6 层面的优化。</p>\n<h1>为什么选择 OCaml</h1>\n<p>在和导师讨论题目的时候，我跟导师说用 Java 来写。但是其实我更想用的是 Scala，因为 Scala 里面的很多语言特性非常有 FP 风格，也很适合用来写编译器和静态分析工具。加之运行在 JVM 上面更容易做多线程，有了多线程可以使静态分析过程有较大的提升。另外 Scala 可以编译成 js，或者 JVM 上面有很多可以和 js 联动的方案，方便和其他 node.js 的工具联动。</p>\n<p>开始使用 Scala 的时候却发现了许多问题，一来我使用的 Parser 和 AST 结构都是 Java 写的（使用了 Graal.js 来进行 parse），无法使用 Scala 的 case class 风格，也就是我要在 Scala 里面写 Java Style 的代码，我表示很拒绝。另一方面，我要进行的静态分析是基于图（Graph）的，似乎没办法进行并行计算，即使可以，也会有超级多 overhead，还不如使用单线程。</p>\n<p>之前用过 OCaml 来写过编译器，感觉代数形式的数据结构天生对编译器和静态分析非常友好。</p>","frontmatter":{"date":"2019-02-20","path":"/2019/02/parse-javascript-with-ocaml","title":"使用 OCaml 解析 JavaScript","permalink":null,"headerImage":null}}},"pageContext":{"title":"使用 OCaml 解析 JavaScript"}}