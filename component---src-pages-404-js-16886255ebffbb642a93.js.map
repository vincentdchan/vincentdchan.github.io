{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/navigation.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","Navigation","styled","div","withConfig","displayName","componentId","Header","_ref","siteTitle","react_default","style","margin","maxWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","gatsby_browser_entry","to","textDecoration","navigation","propTypes","PropTypes","string","defaultProps","Layout","headerImage","children","query","render","data","react","header","site","siteMetadata","padding","href","_755544856","node","isRequired","SEO","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAaeQ,UARM,kBACnBJ,EAAAK,EAAAC,cAACJ,EAAA,EAAD,KACEF,EAAAK,EAAAC,cAACH,EAAA,EAAD,CAAKI,MAAM,mBACXP,EAAAK,EAAAC,cAAA,uBACAN,EAAAK,EAAAC,cAAA,0QCHWE,SAJIC,EAAOC,IAAVC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAGJ,CAAH,uBCIVK,EAAS,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,UAAH,OACbC,EAAAZ,EAAAC,cAAA,WACEW,EAAAZ,EAAAC,cAAA,OACEY,MAAO,CACLC,OAAM,SACNC,SAAU,IAEVC,WAAY,UACZC,cAAe,OACfC,YAAa,OACbC,aAAc,SAGhBP,EAAAZ,EAAAC,cAAA,MAAIY,MAAO,CAAEC,OAAQ,IACnBF,EAAAZ,EAAAC,cAACmB,EAAA,KAAD,CACEC,GAAG,IACHR,MAAO,CACLS,eAAc,SAGfX,IAGLC,EAAAZ,EAAAC,cAACsB,EAAD,KACEX,EAAAZ,EAAAC,cAACmB,EAAA,KAAD,CACEC,GAAG,WACHR,MAAO,CACLS,eAAgB,SAGlBV,EAAAZ,EAAAC,cAAA,0BAOVQ,EAAOe,UAAY,CACjBb,UAAWc,IAAUC,QAGvBjB,EAAOkB,aAAe,CACpBhB,UAAS,IAGIF,QC5CTmB,UAAS,SAAAlB,GAAA,IAAGmB,EAAHnB,EAAGmB,YAAaC,EAAhBpB,EAAgBoB,SAAhB,OACblB,EAAAZ,EAAAC,cAACmB,EAAA,YAAD,CACEW,MAAK,YASLC,OAAQ,SAAAC,GAAI,OACVrB,EAAAZ,EAAAC,cAACiC,EAAA,SAAD,KACGL,EACDjB,EAAAZ,EAAAC,cAACkC,EAAD,CAAQxB,UAAWsB,EAAKG,KAAKC,aAAanC,QAC1CU,EAAAZ,EAAAC,cAAA,OACEY,MAAO,CACLC,OAAM,SACNC,SAAU,IACVuB,QAAO,wBACPtB,WAAY,IAGbc,EACDlB,EAAAZ,EAAAC,cAAA,oCACqBW,EAAAZ,EAAAC,cAAA,KAAGsC,KAAK,4BAAR,cAxB7BN,KAAAO,MAgCFZ,EAAOJ,UAAY,CACjBM,SAAUL,IAAUgB,KAAKC,YAGZd,+GCvCf,SAASe,EAATjC,GAA2D,IAA5CkC,EAA4ClC,EAA5CkC,YAAaC,EAA+BnC,EAA/BmC,KAAMC,EAAyBpC,EAAzBoC,KAAMC,EAAmBrC,EAAnBqC,SAAU7C,EAASQ,EAATR,MAChD,OACE8C,EAAAhD,EAAAC,cAACgD,EAAA,YAAD,CACElB,MAAOmB,EACPlB,OAAQ,SAAAC,GACN,IAAMkB,EACJP,GAAeX,EAAKG,KAAKC,aAAaO,YACxC,OACEI,EAAAhD,EAAAC,cAACmD,EAAApD,EAAD,CACEqD,eAAgB,CACdR,QAEF3C,MAAOA,EACPoD,cAAa,QAAUrB,EAAKG,KAAKC,aAAanC,MAC9C4C,KAAM,CACJ,CACES,KAAI,cACJC,QAASL,GAEX,CACEM,SAAQ,WACRD,QAAStD,GAEX,CACEuD,SAAQ,iBACRD,QAASL,GAEX,CACEM,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASvB,EAAKG,KAAKC,aAAaqB,QAElC,CACEH,KAAI,gBACJC,QAAStD,GAEX,CACEqD,KAAI,sBACJC,QAASL,IAGVQ,OACCZ,EAASa,OAAS,EACd,CACEL,KAAI,WACJC,QAAST,EAASc,KAAT,OAEX,IAELF,OAAOb,MAtDlBb,KAAA6B,IA8DJnB,EAAIhB,aAAe,CACjBkB,KAAI,KACJC,KAAM,GACNC,SAAU,IAGZJ,EAAInB,UAAY,CACdoB,YAAanB,IAAUC,OACvBmB,KAAMpB,IAAUC,OAChBoB,KAAMrB,IAAUsC,MAChBhB,SAAUtB,IAAUuC,QAAQvC,IAAUC,QACtCxB,MAAOuB,IAAUC,OAAOgB,YAGXC,MAEf,IAAMO,EAAY","file":"component---src-pages-404-js-16886255ebffbb642a93.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","import styled from 'styled-components'\n\nconst Navigation = styled.div`\n  padding: 18px 0px;\n`\n\nexport default Navigation\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nimport Navigation from '../components/navigation'\n\nconst Header = ({ siteTitle }) => (\n  <div>\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 700,\n        // padding: `1.45rem 1.0875rem`,\n        paddingTop: '1.45rem',\n        paddingBottom: '0rem',\n        paddingLeft: '1rem',\n        paddingRight: '1rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n      <Navigation>\n        <Link\n          to=\"/aboutme\"\n          style={{\n            textDecoration: 'none',\n          }}\n        >\n          <strong>关于我</strong>\n        </Link>\n      </Navigation>\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ headerImage, children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Fragment>\n        {headerImage}\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 700,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          {children}\n          <footer>\n            © 2018, Built with <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </Fragment>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}