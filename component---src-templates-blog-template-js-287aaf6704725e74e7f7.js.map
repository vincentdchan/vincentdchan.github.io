{"version":3,"sources":["webpack:///./src/components/blogPost.js","webpack:///./src/templates/blogTemplate.js","webpack:///./src/components/navigation.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/Title.js","webpack:///./src/components/postMeta.js","webpack:///./src/components/headerImagePlaceHolder.js"],"names":["BlogPost","styled","div","withConfig","displayName","componentId","Template","_ref","date","markdownRemark","data","frontmatter","html","path","__date","Date","year","getFullYear","toString","month","getMonth","length","permalink","react_default","a","createElement","layout","headerImage","dist_default","src","placeholder","loading","headerImagePlaceHolder","alt","style","margin","seo","title","keywords","className","blogPost","Title","to","postMeta","moment","format","dangerouslySetInnerHTML","__html","pageQuery","Navigation","span","Header","siteTitle","maxWidth","paddingTop","paddingBottom","paddingLeft","paddingRight","gatsby_browser_entry","textDecoration","navigation","propTypes","PropTypes","string","defaultProps","Layout","children","query","render","react","header","site","siteMetadata","padding","href","_755544856","node","isRequired","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","TitleContainer","PostMeta","HeaderImagePlaceHolder"],"mappings":"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","file":"component---src-templates-blog-template-js-287aaf6704725e74e7f7.js","sourcesContent":["import styled from 'styled-components';\n\nconst BlogPost = styled.div`\n  font-size: 18px;\n  line-height: 1.5em;\n`;\n\nexport default BlogPost;\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport moment from 'moment'\nimport ProgressiveImage from 'react-progressive-image'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Title from '../components/Title'\nimport PostMeta from '../components/postMeta'\nimport BlogPost from '../components/blogPost'\nimport HeaderImagePlaceFolder from '../components/headerImagePlaceHolder'\n\nfunction betterDate(date) {\n  return moment(date).format('YYYY-MM-DD');\n}\n\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  let path = frontmatter.path;\n  if (!path) {\n    const __date = new Date(frontmatter.date);\n    const year = __date.getFullYear().toString();\n    let month = (__date.getMonth() + 1).toString();\n    if (month.length < 2) {\n      month = '0' + month;\n    }\n    path = `/${year}/${month}/${frontmatter.permalink}`;\n  }\n  return (\n    <Layout\n      headerImage={\n        frontmatter.headerImage && (\n          <ProgressiveImage src={frontmatter.headerImage} placeholder=\"\">\n            {(src, loading) => {\n              return loading ? <HeaderImagePlaceFolder /> : (\n                <img\n                  src={src}\n                  alt=\"\"\n                  style={{\n                    margin: '0px',\n                  }}\n                />\n              );\n            }}\n          </ProgressiveImage>\n        )\n      }\n    >\n      <SEO\n        title={frontmatter.title}\n        keywords={[\n          `blog`,\n          `technology`,\n          `photography`,\n        ]}\n      />\n      <div className=\"blog-post-container\">\n        <BlogPost>\n          <Title to={path}>\n            {frontmatter.title}\n          </Title>\n          <PostMeta>\n            Posted at {betterDate(frontmatter.date)}\n          </PostMeta>\n          <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </BlogPost>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($title: String!) {\n    markdownRemark(frontmatter: { title: { eq: $title } }) {\n      html\n      frontmatter {\n        date\n        path\n        title\n        permalink\n        headerImage\n      }\n    }\n  }\n`\n","import styled from 'styled-components'\n\nconst Navigation = styled.div`\n  padding-left: 0px;\n  padding-right: 0px;\n  padding-top: 4px;\n  padding-bottom: 36px;\n`\n\nexport default Navigation\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport Navigation from '../components/navigation'\n\nconst Title = styled.span`\n  margin-right: 12px;\n  font-weight: 500;\n\n  &:hover {\n    border-bottom: 2px solid rgb(46, 64, 91);\n  }\n`;\n\nconst Header = ({ siteTitle }) => (\n  <div>\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 700,\n        paddingTop: '1.45rem',\n        paddingBottom: '0rem',\n        paddingLeft: '1rem',\n        paddingRight: '1rem',\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n      <Navigation>\n        <Link\n          to=\"/\"\n          style={{\n            textDecoration: 'none',\n          }}\n        >\n          <Title>首页</Title>\n        </Link>\n        <Link\n          to=\"/aboutme\"\n          style={{\n            textDecoration: 'none',\n          }}\n        >\n          <Title>关于我</Title>\n        </Link>\n      </Navigation>\n    </div>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React, { Fragment } from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport './layout.css'\n\nconst Layout = ({ headerImage, children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Fragment>\n        {headerImage}\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 700,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          {children}\n          <footer>\n            © 2018, Built with <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n          </footer>\n        </div>\n      </Fragment>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst TitleContainer = styled.span`\n  font-weight: 500;\n  font-size: 24px;\n  color: #2e405b;\n\n  &:hover {\n    border-bottom: solid #2e405b 2px;\n  }\n`\n\nconst Title = ({ to, children }) => (\n  <Link\n    to={to}\n    style={{\n      textDecoration: 'none',\n    }}\n  >\n    <TitleContainer>\n      {children}\n    </TitleContainer>\n  </Link>\n)\n\nexport default Title\n","import styled from 'styled-components'\n\nconst PostMeta = styled.div`\n  margin: 8px 0px;\n  font-size: 16px;\n  color: rgb(46, 64, 91);\n`\nexport default PostMeta\n","import styled from 'styled-components'\n\nconst HeaderImagePlaceHolder = styled.div`\nbackground-color: rgb(245, 247, 249);\nheight: 280px;\n`;\n\nexport default HeaderImagePlaceHolder\n"],"sourceRoot":""}